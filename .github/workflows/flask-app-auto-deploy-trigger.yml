name: Trigger auto deployment for flask-app

# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches: 
      [ PlaidBridgeOpenBankingApi ]
    paths:
    - '**'
    - '.github/workflows/flask-app-AutoDeployTrigger-69a53014-962a-4e10-af55-2360fc24b3bb.yml'

  # Allow manual trigger 
  workflow_dispatch:      

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions: 
      id-token: write # Required for requesting the OIDC JWT Token
      contents: read # Required when GH token is used to authenticate with private repo

    steps:
      # Step 1: Checkout Code
      - name: Checkout to the branch
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Set environment variables
      - name: Set environment variables
        run: |
          echo "PLAID_CLIENT_ID=${{ secrets.FLASKAPP_PLAID_CLIENT_ID }}" >> $GITHUB_ENV
          echo "PLAID_SECRET=${{ secrets.FLASKAPP_PLAID_SECRET }}" >> $GITHUB_ENV
          echo "PLAID_ENV=${{ secrets.FLASKAPP_PLAID_ENV }}" >> $GITHUB_ENV
          echo "SECRET_KEY=${{ secrets.FLASKAPP_SECRET_KEY }}" >> $GITHUB_ENV
          echo "USER_EMAIL=${{ secrets.FLASKAPP_USER_EMAIL }}" >> $GITHUB_ENV

      # Step 5: Build & Push Docker Image to Azure Container Registry
      - name: Build Docker image
        run: |
          docker build -t plaidbridgeflaskapp .

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.FLASKAPP_ACR_LOGIN_SERVER }}
          username: ${{ secrets.FLASKAPP_REGISTRY_USERNAME }}
          password: ${{ secrets.FLASKAPP_REGISTRY_PASSWORD }}

      - name: Push Docker image to Azure Container Registry
        run: |
          docker tag plaidbridgeflaskapp ${{ secrets.FLASKAPP_ACR_LOGIN_SERVER }}/flask-app:${{ github.sha }}
          docker push ${{ secrets.FLASKAPP_ACR_LOGIN_SERVER }}/flask-app:${{ github.sha }}

      # Step 6: Login to Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.FLASKAPP_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.FLASKAPP_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.FLASKAPP_AZURE_SUBSCRIPTION_ID }}

      # Step 7: Deploy to Azure Container App
      - name: Deploy to Azure Container App
        uses: azure/container-apps-deploy@v1
        with:
          resource-group: PlaidBridgeResourceGroup
          containerapp-name: flask-app
          acr-image: '${{ secrets.FLASKAPP_ACR_LOGIN_SERVER }}/flask-app:${{ github.sha }}'
          azure-credentials: ${{ secrets.FLASKAPP_AZURE_CREDENTIALS }}
